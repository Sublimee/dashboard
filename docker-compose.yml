services:
  db:
    image: postgis/postgis:14-master
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgis -d postgis"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: postgis
      POSTGRES_USER: postgis
      POSTGRES_PASSWORD: postgis
    volumes:
      - ./database:/var/lib/postgresql/data
      - ./dump:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - 0.0.0.0:27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - app-network
    volumes:
      - ./mongo-init:/docker-entrypoint-initdb.d:ro

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - 0.0.0.0:8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - app-network

  myapp:
    container_name: myapp
    image: myapp:latest
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - app-network

networks:
  app-network:
    driver: bridge